buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	//test coverage
	id 'jacoco'
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.1.0'
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}
jacoco {
	toolVersion = '0.8.8'
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

group = 'com.modong'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

dependencies {
	//보안
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//랜덤 문자열 생성
	// https://mvnrepository.com/artifact/org.apache.commons/commons-text
	implementation 'org.apache.commons:commons-text:1.10.0'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	//데이터베이스
	runtimeOnly 'com.h2database:h2'
	implementation 'mysql:mysql-connector-java'
	//어노테이션
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	// 테스트 데이터 만들어주는 라이브러리
	implementation 'net.datafaker:datafaker:1.7.0'
	//Swagger 문서 쉽게 만들어주는 라이브러리
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.14'
	// prometheus
	implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.5'
	implementation 'io.micrometer:micrometer-registry-prometheus:1.9.5'
	// querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

	//JWT Token 사용을 위한 라이브러리 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'com.google.code.findbugs:jsr305:3.0.2'

	//redis를 사용하기 위한 라이브러리 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy 'jacocoTestReport' //이거 추가 안하면 testReport 안생김
}
// querydsl 추가 시작

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
// querydsl 추가 끝